on:
    workflow_dispatch:
    push:
        branches:
            - main
            - compile-with-gradle-cache
    pull_request:
        types: [ opened, synchronize, reopened ]

jobs:
    compile:
        runs-on: ubuntu-latest
        env:
            LOCAL_DEV_ENV: "localhost:8080"
            LUX_DOMAIN: "lux.energy"
            ZENMO_DOMAIN: "zenmo.com"
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4
            -   name: Set up JDK 21
                uses: actions/setup-java@v4
                with:
                    java-version: '21'
                    distribution: 'temurin'
            -   name: Cache Gradle packages
                uses: actions/cache@v3
                with:
                    path: |
                        ~/.gradle
                        ~/.cache
                        ./.gradle
                    key: frontend-compile
            -   name: Setup Gradle
                uses: gradle/actions/setup-gradle@v3
            -   name: Make Gradle wrapper executable
                run: chmod +x ./gradlew
            -   name: Compile Kobweb project
                run: ./gradlew site:kobwebExport -PkobwebExportLayout=STATIC -PkobwebReuseServer=false -PkobwebBuildTarget=RELEASE --stacktrace
            -   name: Check for compilation errors
                run: |
                    if [ $? -ne 0 ]; then
                      echo "Kobweb compilation failed!"
                      exit 1
                    fi

    build:
        if: github.event_name != 'pull_request'
        runs-on: ubuntu-latest
        needs: [ compile ]
        steps:
            -   uses: actions/checkout@v4
            ## Buildx is needed for caching
            -   name: Set up Buildx
                uses: docker/setup-buildx-action@v2

            # Docker layer cache works almost automatically, but cache mounts need more setup
            -   name: Cache
                uses: actions/cache@v3
                id: cache
                with:
                    path: |
                        root-gradle
                        root-cache
                        app-gradle
                    key: frontend

            -   name: inject cache mounts into docker
                uses: reproducible-containers/buildkit-cache-dance@v3.1.0
                with:
                    cache-map: |
                        {
                            "root-gradle": "/root/.gradle",
                            "root-cache": "/root/.cache",
                            "app-gradle": "/app/.gradle"
                        }
                    skip-extraction: ${{ steps.cache.outputs.cache-hit }}

            -   name: Login to GitHub Container Registry
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            # exposes ACTIONS_CACHE_URL and ACTIONS_RUNTIME_TOKEN
            # see https://docs.docker.com/build/cache/backends/gha/
            -   name: Expose
                uses: crazy-max/ghaction-github-runtime@v3
            -   run: ./deploy/build.sh

    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
            -   name: Install SSH key
                uses: shimataro/ssh-key-action@v2
                with:
                    key: ${{ secrets.SWARM_SSH_PRIVATE_KEY }}
                    known_hosts: server.zenmo.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJ1E4LUG22qgzc8U7oNYGWCn0cyA31+iyX2pck9wcPMS
            -   name: docker context create
                run: docker context create zenmoswarm --docker "host=ssh://root@server.zenmo.com"
            -   run: docker context use zenmoswarm
            -   run: ./deploy/deploy.sh
